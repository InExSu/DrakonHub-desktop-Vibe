Задача: модернизировать структуру приложения и формат файлов .drakon для поддержки множественных диаграмм/функций

Требования к интерфейсу:
1. Новая структура интерфейса:
   - Слева: панель списка функций (новая)
   - Справа от списка функций: панель инструментов (существующая)
   - Справа от панели инструментов: область диаграммы (существующая)

2. Панель списка функций должна содержать:
   - Поле фильтрации вверху (поиск по части названия функции)
   - Список элементов в порядке:
     * "header" (первый элемент) - для кода перед функциями
     * Список функций (по алфавиту или в порядке создания)
     * "footer" (последний элемент) - для кода после функций
   - Возможность выбора элемента для редактирования

3. Поддержка обоих форматов файлов:

	Пример старого формата файла drakon
	```json
	{
		"items": {
			"1": {
				"type": "end"
			},
			"2": {
				"type": "branch",
				"branchId": 0,
				"one": "3"
			},
			"3": {
				"type": "action",
				"content": "<p>действие</p>",
				"one": "1"
			}
		},
		"type": "drakon",
		"id": "01.drakon"
	}
	```

   - Старый формат (одна диаграмма) должен автоматически конвертироваться в новый:
     * Создается функция с именем "fun_Rename"
     * Содержимое переносится в items этой функции
     * Добавляются пустые header и footer

4. Новый обязательный формат файла:
   - Обязательные ключи верхнего уровня:
     * "type": "drakon"
     * "id": имя файла
     * "header": строка (может быть пустой)
     * "footer": строка (может быть пустой)
   - Функции хранятся как отдельные объекты с ключами:
     * "name": имя функции
     * "arguments": аргументы (строка)
     * "return_type": тип возвращаемого значения
     * "items": содержимое диаграммы

5. Пример нового формата:
```json
{
    "header": "код перед функциями",
    "function_01": {
        "name": "fsm",
        "arguments": "int i, str s",
        "return_type": "bool",
        "items": {
            "1": {"type": "end"},
            "2": {
                "type": "branch",
                "branchId": 0,
                "one": "3"
            },
            "3": {
                "type": "action",
                "content": "<p>действие</p>",
                "one": "1"
            }
        }
    },
    "footer": "код после функций",
    "type": "drakon",
    "id": "01.drakon"
}
```

6. Дополнительные требования:
   - Реализовать миграцию старых файлов в новый формат при открытии
   - Возможность добавления/удаления функций через интерфейс
   - При отсутствии обязательных полей - создать их
   - Нужна ли возможность экспорта отдельных функций?

Новый код помечай комментариями со словом vibe и дата-время вида 2025-05-08 17:30